
10
Track CloudTrail Changes using CloudWatch
Objective
Through this demo you will learn how to Set up AWS CloudWatch Alarms to track
changes made to CloudTrail’s in the account
Pre-requisites
• You must have a valid AWS account. You need to sign-in to the account.
• Ensure you have access to CloudTrail and CloudWatch service.
Step1- Login to your AWS account and search for CloudTrail service in a specific
region.
Create a Trail and ensure to enable CloudWatch logging for the trail during the
trail creation process.
Refer the Lab on Cloud Trail service demonstration to create the trail.
Ensure trail is created successfully with CloudWatch logging for the types of
events to be recorded.
Step – 2 Navigate to SNS service in the same region and create a SNS topic with
an email subscription, to receive email notifications based on changes made to
your trail.
SNS topic settings –
Standard SNS topic.
SNS topic Access policy to allow everyone to subscribe and publish (for ease of
demonstration).
Step-3 – Creating a Lambda Function to restart CloudTrail logging
Navigate to Lambda service page and create a Python Lambda Function with
permissions to access CloudTrail service.
The Python lambda function fetches the name of the CloudTrail which was
disabled and starts the logging back again.
Refer to the resource at the end of this module for the Python Code –
Once the Code is deployed, add a trigger to the Lambda Function. Here the trigger
will be the SNS Topic created in the previous step.
Step-3 – Navigate to CloudWatch service page and go to Log Groups resource.
Under the Logs groups listed, click on the Log Group for your Cloud trail.
After clicking, click on Metrics filter tab to create a Metrics filter for the Log
Group.
Step-4 – Under Metric Filters, click on create metric filter to create a new one.
Under Step-1 of filter creation specify filter pattern as shown below –
Filter Pattern - { ($.eventName = "DeleteTrail") || ($.eventName = "StopLogging") }
Once done click on Next to go to the next step –
In Step 2 provide Filter name and Under metric details, provide the metric
namespace, metric name, and the metric value as “1”.
Click on Next to finalize the changes.
Finally, review and confirm to create the Metric filter
Step-5 Select the Filter and click on Create Alarm to create an Alarm to send
notifications about the CloudTrail changes.
Under Step-1 of Alarm creation, specify the metric and conditions as shown below
Metric –
Conditions –
Once done click on Next to go to the next step for Alarm creation.
Under step 2 for configure actions, mention the Alarm state trigger as “In Alarm”
and select the SNS topic which was created in the previous steps, and check the
email endpoints shown.
Notifications will be sent to this email endpoint.
Once done click on Next to go to the next step.
Under Step – 3, provide an alarm name, ensure alarm name is same as the trail
name created in Step 1, and click on Next when done.
Finally, review the details and create the Alarm.
It will take a couple of minutes for Alarm data to be populated.
Step-6 To test the Alarm, navigate to CloudTrail resource page, select the Trail
and stop logging.
After a couple of minutes, the Cloud Watch Alarm will be triggered.
An email notification is sent to the subscribed email endpoint –
As soon as the Alarm Triggers, the Lambda function created, executes and Starts
the CloudTrail logging again.
This completes the demonstration of triggering CloudWatch based on changes
made to the Cloud Trail in the Account.
Resource Cleanup –
Upon completion of the demonstration, to cleanup the resources, delete the
below resources created as part of the demonstration –
1. Trail resource in CloudTrail.
2. SNS topic and its subscription.
3. Cloud Watch Alarm.